ÊúçÂä°Âô®ËøêË°åÂú® localhost:\\.\pipe\16428b72-e6ea-4964-b727-01c10bbfd4fd Á´ØÂè£‰∏ä...
processId:7072
[0mOPTIONS /api/init/data [32m200 [0m4.072 ms - 129[0m
mongodb connection success 
[0mGET /api/init/data [32m200 [0m1.721 ms - 129[0m
[0mOPTIONS /api/login/data [32m200 [0m1.985 ms - 4[0m
[0mPOST /api/login/data [32m200 [0m68.880 ms - 687[0m
log insert success
[0mOPTIONS /api/main/contact/data/1/10 [32m200 [0m0.270 ms - 129[0m
[0mGET /api/main/contact/data/1/10 [32m200 [0m23.592 ms - 751[0m
[0mOPTIONS /api/main/contact/data-unique?value=%E5%B9%BF%E5%B7%9E%EF%BC%88%E5%88%86%E5%85%AC%E5%8F%B8%EF%BC%89&id=6130dccd16f29f1890793588 [32m200 [0m0.265 ms - 129[0m
[0mOPTIONS /api/main/contact/data-unique-vid?value=gz&id=6130dccd16f29f1890793588 [32m200 [0m0.244 ms - 129[0m
[0mGET /api/main/contact/data-unique?value=%E5%B9%BF%E5%B7%9E%EF%BC%88%E5%88%86%E5%85%AC%E5%8F%B8%EF%BC%89&id=6130dccd16f29f1890793588 [32m200 [0m6.273 ms - 4[0m
[0mGET /api/main/contact/data-unique-vid?value=gz&id=6130dccd16f29f1890793588 [32m200 [0m5.079 ms - 4[0m
[0mGET /api/main/contact/data-unique?value=%E5%B9%BF%E5%B7%9E%EF%BC%88%E5%88%86%E5%85%AC%E5%8F%B8%EF%BC%89&id=6130dccd16f29f1890793588 [36m304 [0m4.086 ms - -[0m
[0mGET /api/main/contact/data-unique-vid?value=gz&id=6130dccd16f29f1890793588 [36m304 [0m4.153 ms - -[0m
[0mOPTIONS /api/main/contact/data/ [32m200 [0m0.349 ms - 129[0m
IncomingMessage {
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     paused: false,
     emitClose: true,
     autoDestroy: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  _events:
   [Object: null prototype] { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket:
   Socket {
     connecting: false,
     _hadError: false,
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] {
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Pipe],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _pipeName: '\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd',
        _connectionKey: '-1:\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd:-1',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(asyncId)]: 19 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Pipe],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _pipeName: '\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd',
        _connectionKey: '-1:\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd:-1',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(asyncId)]: 19 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 1631786039205,
        [Symbol(isReused)]: false },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: [Object: null prototype] {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function],
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 27,
     [Symbol(kHandle)]:
      Pipe { reading: true, _consumed: true, [Symbol(owner)]: [Circular] },
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 9506,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 409,
        [Symbol(triggerId)]: 29 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  connection:
   Socket {
     connecting: false,
     _hadError: false,
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] {
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Pipe],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _pipeName: '\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd',
        _connectionKey: '-1:\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd:-1',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(asyncId)]: 19 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Pipe],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _pipeName: '\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd',
        _connectionKey: '-1:\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd:-1',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(asyncId)]: 19 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 1631786039205,
        [Symbol(isReused)]: false },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: [Object: null prototype] {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function],
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 27,
     [Symbol(kHandle)]:
      Pipe { reading: true, _consumed: true, [Symbol(owner)]: [Circular] },
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 9506,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 409,
        [Symbol(triggerId)]: 29 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers:
   { connection: 'keep-alive',
     'content-length': '213',
     'content-type': 'application/json',
     accept: 'application/json, text/plain, */*',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.9',
     host: '127.0.0.1:8001',
     referer: 'http://127.0.0.1/',
     'user-agent':
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36',
     'sec-ch-ua':
      '"Google Chrome";v="93", " Not;A Brand";v="99", "Chromium";v="93"',
     'access-token':
      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjYxMzczNzc0MTA5YTIxMjA1MDNiMzIzZSIsIm5hbWUiOiJhZG1pbiIsImVtYWlsIjoiNzMyNDQ4NTg2OEBxcS5jb20iLCJyb2xlSWQiOnsiX2lkIjoiNWMzMzBhZWQ1ZjgyOWYxODMwMjE5OTg3IiwibmFtZSI6Iui2hee6p-euoeeQhuWRmCIsInZpZCI6Mn0sInBob25lIjoiMTgzMjA4Njc5ODUiLCJfX3YiOjB9LCJpYXQiOjE2MzE3ODYwMzMsImV4cCI6MTYzMTc4OTYzM30.c7Kn0YkXdS8TvTNSyv657fowWc1abHT_2c2yg3TYrDg',
     'sec-ch-ua-mobile': '?0',
     'sec-ch-ua-platform': '"Windows"',
     origin: 'http://127.0.0.1',
     'sec-fetch-site': 'same-site',
     'sec-fetch-mode': 'cors',
     'sec-fetch-dest': 'empty',
     'x-original-url': '/api/main/contact/data/' },
  rawHeaders:
   [ 'Connection',
     'keep-alive',
     'Content-Length',
     '213',
     'Content-Type',
     'application/json',
     'Accept',
     'application/json, text/plain, */*',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.9',
     'Host',
     '127.0.0.1:8001',
     'Referer',
     'http://127.0.0.1/',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36',
     'sec-ch-ua',
     '"Google Chrome";v="93", " Not;A Brand";v="99", "Chromium";v="93"',
     'Access-Token',
     'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjYxMzczNzc0MTA5YTIxMjA1MDNiMzIzZSIsIm5hbWUiOiJhZG1pbiIsImVtYWlsIjoiNzMyNDQ4NTg2OEBxcS5jb20iLCJyb2xlSWQiOnsiX2lkIjoiNWMzMzBhZWQ1ZjgyOWYxODMwMjE5OTg3IiwibmFtZSI6Iui2hee6p-euoeeQhuWRmCIsInZpZCI6Mn0sInBob25lIjoiMTgzMjA4Njc5ODUiLCJfX3YiOjB9LCJpYXQiOjE2MzE3ODYwMzMsImV4cCI6MTYzMTc4OTYzM30.c7Kn0YkXdS8TvTNSyv657fowWc1abHT_2c2yg3TYrDg',
     'sec-ch-ua-mobile',
     '?0',
     'sec-ch-ua-platform',
     '"Windows"',
     'Origin',
     'http://127.0.0.1',
     'Sec-Fetch-Site',
     'same-site',
     'Sec-Fetch-Mode',
     'cors',
     'Sec-Fetch-Dest',
     'empty',
     'X-Original-URL',
     '/api/main/contact/data/' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/contact/data/',
  method: 'PUT',
  statusCode: null,
  statusMessage: null,
  client:
   Socket {
     connecting: false,
     _hadError: false,
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] {
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Pipe],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _pipeName: '\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd',
        _connectionKey: '-1:\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd:-1',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(asyncId)]: 19 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Pipe],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _pipeName: '\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd',
        _connectionKey: '-1:\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd:-1',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(asyncId)]: 19 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 1631786039205,
        [Symbol(isReused)]: false },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: [Object: null prototype] {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function],
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 27,
     [Symbol(kHandle)]:
      Pipe { reading: true, _consumed: true, [Symbol(owner)]: [Circular] },
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 9506,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 409,
        [Symbol(triggerId)]: 29 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/api/main',
  originalUrl: '/api/main/contact/data/',
  _parsedUrl:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/contact/data/',
     path: '/contact/data/',
     href: '/contact/data/',
     _raw: '/contact/data/' },
  params: {},
  query: {},
  res:
   ServerResponse {
     _events:
      [Object: null prototype] { finish: [Array], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     outputData: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 27,
        [Symbol(kHandle)]: [Pipe],
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 9506,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(refed)]: false,
           [Symbol(asyncId)]: 409,
           [Symbol(triggerId)]: 29 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 27,
        [Symbol(kHandle)]: [Pipe],
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 9506,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(refed)]: false,
           [Symbol(asyncId)]: 409,
           [Symbol(triggerId)]: 29 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: [Object: null prototype] {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Array] },
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        'x-powered-by': [Array],
        'access-control-allow-origin': [Array],
        'access-control-allow-methods': [Array],
        'access-control-allow-headers': [Array] } },
  _startAt: [ 3336, 727826225 ],
  _startTime: 2021-09-16T09:53:59.236Z,
  _remoteAddress: undefined,
  body:
   { name: 'ÂπøÂ∑ûÔºàÂàÜÂÖ¨Âè∏Ôºâ',
     vname: 'gz',
     desc: '',
     order: 3,
     x: 23.55,
     y: 45.89,
     addr: 'ÂπøÂ∑ûÊµ∑Áè†Âå∫',
     phone: '15877990099',
     _id: '6130dccd16f29f1890793588',
     createDate: '2021-09-02T14:16:45.226Z',
     __v: 0 },
  _body: true,
  length: undefined,
  authInfo:
   { _id: '61373774109a2120503b323e',
     name: 'admin',
     email: '7324485868@qq.com',
     roleId: { _id: '5c330aed5f829f1830219987', name: 'Ë∂ÖÁ∫ßÁÆ°ÁêÜÂëò', vid: 2 },
     phone: '18320867985',
     __v: 0 },
  route:
   Route {
     path: '/contact/data',
     stack: [ [Layer] ],
     methods: { put: true } } }
IProxy success function name: putData
log insert success
[0mPUT /api/main/contact/data/ [32m200 [0m33.205 ms - 250[0m
[0mGET /api/main/contact/data/1/10 [36m304 [0m8.638 ms - -[0m
[0mGET /api/main/contact/data-unique?value=%E5%B9%BF%E5%B7%9E%EF%BC%88%E5%88%86%E5%85%AC%E5%8F%B8%EF%BC%89&id=6130dccd16f29f1890793588 [36m304 [0m8.132 ms - -[0m
[0mGET /api/main/contact/data-unique-vid?value=gz&id=6130dccd16f29f1890793588 [36m304 [0m3.828 ms - -[0m
[0mOPTIONS /api/main/log/data/1/10 [32m200 [0m0.358 ms - 129[0m
[0mGET /api/main/log/data/1/10 [32m200 [0m27.749 ms - 2146[0m
[0mOPTIONS /api/main/log/data-dtl/61431437760bc81ba02daa88 [32m200 [0m0.673 ms - 129[0m
[0mGET /api/main/log/data-dtl/61431437760bc81ba02daa88 [32m200 [0m8.286 ms - 236[0m
[0mGET /api/main/log/data-dtl/61431437760bc81ba02daa88 [36m304 [0m6.438 ms - -[0m
[0mOPTIONS /api/init/data [32m200 [0m1.245 ms - 129[0m
[0mOPTIONS /api/main/log/data/1/10 [32m200 [0m0.697 ms - 129[0m
[0mGET /api/init/data [32m200 [0m17.168 ms - 270[0m
[0mGET /api/main/log/data/1/10 [36m304 [0m32.885 ms - -[0m
[0mGET /api/init/data [36m304 [0m15.485 ms - -[0m
[0mGET /api/main/log/data/1/10 [36m304 [0m24.873 ms - -[0m
[0mOPTIONS /api/init/data [32m200 [0m0.472 ms - 129[0m
[0mOPTIONS /api/main/log/data/1/10 [32m200 [0m0.326 ms - 129[0m
[0mGET /api/init/data [36m304 [0m12.822 ms - -[0m
[0mGET /api/main/log/data/1/10 [36m304 [0m24.310 ms - -[0m
[0mOPTIONS /api/main/log/data-dtl/61431437760bc81ba02daa88 [32m200 [0m0.406 ms - 129[0m
[0mGET /api/main/log/data-dtl/61431437760bc81ba02daa88 [36m304 [0m7.923 ms - -[0m
[0mOPTIONS /api/main/rotation/data/1/10 [32m200 [0m0.379 ms - 129[0m
[0mGET /api/main/rotation/data/1/10 [32m200 [0m17.203 ms - 2093[0m
[0mGET /api/public/upload/upload_561a1f4514cb333cf163f36d71c5c37f.png [36m304 [0m4.341 ms - -[0m
[0mOPTIONS /api/main/rotation/data-unique?value=hhh&id=613f481f10385521f0a8d58c [32m200 [0m0.399 ms - 129[0m
[0mOPTIONS /api/main/rotation/data-unique-vid?value=hhh&id=613f481f10385521f0a8d58c [32m200 [0m0.370 ms - 129[0m
[0mGET /api/main/rotation/data-unique?value=hhh&id=613f481f10385521f0a8d58c [36m304 [0m4.838 ms - -[0m
[0mGET /api/main/rotation/data-unique-vid?value=hhh&id=613f481f10385521f0a8d58c [36m304 [0m6.557 ms - -[0m
[0mGET /api/main/rotation/data-unique?value=hhh&id=613f481f10385521f0a8d58c [36m304 [0m6.115 ms - -[0m
[0mGET /api/main/rotation/data-unique-vid?value=hhh&id=613f481f10385521f0a8d58c [36m304 [0m4.789 ms - -[0m
[0mOPTIONS /api/main/rotation/data/ [32m200 [0m0.279 ms - 129[0m
IncomingMessage {
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     paused: false,
     emitClose: true,
     autoDestroy: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  _events:
   [Object: null prototype] { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket:
   Socket {
     connecting: false,
     _hadError: false,
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] {
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Pipe],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _pipeName: '\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd',
        _connectionKey: '-1:\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd:-1',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(asyncId)]: 19 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Pipe],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _pipeName: '\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd',
        _connectionKey: '-1:\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd:-1',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(asyncId)]: 19 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 1631786197681,
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: [Object: null prototype] {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function],
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 1190,
     [Symbol(kHandle)]:
      Pipe { reading: true, _consumed: true, [Symbol(owner)]: [Circular] },
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 167989,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 1289,
        [Symbol(triggerId)]: 1192 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  connection:
   Socket {
     connecting: false,
     _hadError: false,
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] {
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Pipe],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _pipeName: '\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd',
        _connectionKey: '-1:\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd:-1',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(asyncId)]: 19 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Pipe],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _pipeName: '\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd',
        _connectionKey: '-1:\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd:-1',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(asyncId)]: 19 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 1631786197681,
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: [Object: null prototype] {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function],
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 1190,
     [Symbol(kHandle)]:
      Pipe { reading: true, _consumed: true, [Symbol(owner)]: [Circular] },
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 167989,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 1289,
        [Symbol(triggerId)]: 1192 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers:
   { connection: 'keep-alive',
     'content-length': '319',
     'content-type': 'application/json',
     accept: 'application/json, text/plain, */*',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.9',
     host: '127.0.0.1:8001',
     referer: 'http://127.0.0.1/',
     'user-agent':
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36',
     'sec-ch-ua':
      '"Google Chrome";v="93", " Not;A Brand";v="99", "Chromium";v="93"',
     'access-token':
      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjYxMzczNzc0MTA5YTIxMjA1MDNiMzIzZSIsIm5hbWUiOiJhZG1pbiIsImVtYWlsIjoiNzMyNDQ4NTg2OEBxcS5jb20iLCJyb2xlSWQiOnsiX2lkIjoiNWMzMzBhZWQ1ZjgyOWYxODMwMjE5OTg3IiwibmFtZSI6Iui2hee6p-euoeeQhuWRmCIsInZpZCI6Mn0sInBob25lIjoiMTgzMjA4Njc5ODUiLCJfX3YiOjB9LCJpYXQiOjE2MzE3ODYwMzMsImV4cCI6MTYzMTc4OTYzM30.c7Kn0YkXdS8TvTNSyv657fowWc1abHT_2c2yg3TYrDg',
     'sec-ch-ua-mobile': '?0',
     'sec-ch-ua-platform': '"Windows"',
     origin: 'http://127.0.0.1',
     'sec-fetch-site': 'same-site',
     'sec-fetch-mode': 'cors',
     'sec-fetch-dest': 'empty',
     'x-original-url': '/api/main/rotation/data/' },
  rawHeaders:
   [ 'Connection',
     'keep-alive',
     'Content-Length',
     '319',
     'Content-Type',
     'application/json',
     'Accept',
     'application/json, text/plain, */*',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.9',
     'Host',
     '127.0.0.1:8001',
     'Referer',
     'http://127.0.0.1/',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36',
     'sec-ch-ua',
     '"Google Chrome";v="93", " Not;A Brand";v="99", "Chromium";v="93"',
     'Access-Token',
     'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjYxMzczNzc0MTA5YTIxMjA1MDNiMzIzZSIsIm5hbWUiOiJhZG1pbiIsImVtYWlsIjoiNzMyNDQ4NTg2OEBxcS5jb20iLCJyb2xlSWQiOnsiX2lkIjoiNWMzMzBhZWQ1ZjgyOWYxODMwMjE5OTg3IiwibmFtZSI6Iui2hee6p-euoeeQhuWRmCIsInZpZCI6Mn0sInBob25lIjoiMTgzMjA4Njc5ODUiLCJfX3YiOjB9LCJpYXQiOjE2MzE3ODYwMzMsImV4cCI6MTYzMTc4OTYzM30.c7Kn0YkXdS8TvTNSyv657fowWc1abHT_2c2yg3TYrDg',
     'sec-ch-ua-mobile',
     '?0',
     'sec-ch-ua-platform',
     '"Windows"',
     'Origin',
     'http://127.0.0.1',
     'Sec-Fetch-Site',
     'same-site',
     'Sec-Fetch-Mode',
     'cors',
     'Sec-Fetch-Dest',
     'empty',
     'X-Original-URL',
     '/api/main/rotation/data/' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/rotation/data/',
  method: 'PUT',
  statusCode: null,
  statusMessage: null,
  client:
   Socket {
     connecting: false,
     _hadError: false,
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] {
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Pipe],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _pipeName: '\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd',
        _connectionKey: '-1:\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd:-1',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(asyncId)]: 19 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Pipe],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _pipeName: '\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd',
        _connectionKey: '-1:\\\\.\\pipe\\16428b72-e6ea-4964-b727-01c10bbfd4fd:-1',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(asyncId)]: 19 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 1631786197681,
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: [Object: null prototype] {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function],
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 1190,
     [Symbol(kHandle)]:
      Pipe { reading: true, _consumed: true, [Symbol(owner)]: [Circular] },
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 167989,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 1289,
        [Symbol(triggerId)]: 1192 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/api/main',
  originalUrl: '/api/main/rotation/data/',
  _parsedUrl:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/rotation/data/',
     path: '/rotation/data/',
     href: '/rotation/data/',
     _raw: '/rotation/data/' },
  params: {},
  query: {},
  res:
   ServerResponse {
     _events:
      [Object: null prototype] { finish: [Array], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     outputData: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 1190,
        [Symbol(kHandle)]: [Pipe],
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 167989,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(refed)]: false,
           [Symbol(asyncId)]: 1289,
           [Symbol(triggerId)]: 1192 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 1190,
        [Symbol(kHandle)]: [Pipe],
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 167989,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(refed)]: false,
           [Symbol(asyncId)]: 1289,
           [Symbol(triggerId)]: 1192 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: [Object: null prototype] {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Array] },
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        'x-powered-by': [Array],
        'access-control-allow-origin': [Array],
        'access-control-allow-methods': [Array],
        'access-control-allow-headers': [Array] } },
  _startAt: [ 3495, 210363287 ],
  _startTime: 2021-09-16T09:56:37.718Z,
  _remoteAddress: undefined,
  body:
   { order: null,
     _id: '613f481f10385521f0a8d58c',
     name: 'hhh',
     vname: 'hhh',
     imgs: [ [Object] ],
     createDate: '2021-09-13T12:46:23.361Z',
     editDate: '2021-09-13T12:46:23.361Z',
     __v: 0 },
  _body: true,
  length: undefined,
  authInfo:
   { _id: '61373774109a2120503b323e',
     name: 'admin',
     email: '7324485868@qq.com',
     roleId: { _id: '5c330aed5f829f1830219987', name: 'Ë∂ÖÁ∫ßÁÆ°ÁêÜÂëò', vid: 2 },
     phone: '18320867985',
     __v: 0 },
  route:
   Route {
     path: '/rotation/data',
     stack: [ [Layer] ],
     methods: { put: true } } }
IProxy success function name: putData
log insert success
[0mPUT /api/main/rotation/data/ [32m200 [0m28.211 ms - 356[0m
[0mGET /api/main/rotation/data/1/10 [36m304 [0m11.642 ms - -[0m
[0mGET /api/main/rotation/data-unique?value=hhh&id=613f481f10385521f0a8d58c [36m304 [0m6.290 ms - -[0m
[0mGET /api/main/rotation/data-unique-vid?value=hhh&id=613f481f10385521f0a8d58c [36m304 [0m4.902 ms - -[0m
[0mOPTIONS /api/main/log/data/1/10 [32m200 [0m0.414 ms - 129[0m
[0mGET /api/main/log/data/1/10 [32m200 [0m16.891 ms - 2146[0m
[0mOPTIONS /api/main/log/data-dtl/614314d5760bc81ba02daaad [32m200 [0m0.390 ms - 129[0m
[0mGET /api/main/log/data-dtl/614314d5760bc81ba02daaad [32m200 [0m6.938 ms - 237[0m
